func -> (40, -1)
main -> (41, -1)
( -> (22, -1)
) -> (23, -1)
: -> (14, -1)
zilch -> (26, -1)
{ -> (20, -1)
var -> (34, -1)
x -> (1, 0)
: -> (14, -1)
int -> (31, -1)
var -> (34, -1)
sum -> (1, 1)
: -> (14, -1)
int -> (31, -1)
= -> (7, -1)
0 -> (0, 2)
var -> (34, -1)
temp -> (1, 3)
: -> (14, -1)
int -> (31, -1)
= -> (7, -1)
x -> (1, 0)
read -> (29, -1)
( -> (22, -1)
x -> (1, 0)
) -> (23, -1)
repeat -> (36, -1)
( -> (22, -1)
x -> (1, 0)
> -> (9, -1)
0 -> (0, 2)
) -> (23, -1)
{ -> (20, -1)
sum -> (1, 1)
= -> (7, -1)
sum -> (1, 1)
+ -> (3, -1)
( -> (22, -1)
sum -> (1, 1)
* -> (2, -1)
10 -> (0, 4)
) -> (23, -1)
+ -> (3, -1)
x -> (1, 0)
% -> (6, -1)
10 -> (0, 4)
x -> (1, 0)
= -> (7, -1)
x -> (1, 0)
/ -> (5, -1)
10 -> (0, 4)
} -> (21, -1)
assume -> (27, -1)
( -> (22, -1)
temp -> (1, 3)
== -> (12, -1)
sum -> (1, 1)
) -> (23, -1)
{ -> (20, -1)
write -> (30, -1)
( -> (22, -1)
'P' -> (0, 5)
) -> (23, -1)
} -> (21, -1)
otherwise -> (28, -1)
{ -> (20, -1)
write -> (30, -1)
( -> (22, -1)
'N' -> (0, 6)
) -> (23, -1)
} -> (21, -1)
} -> (21, -1)
